plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.bmuschko.docker-spring-boot-application' version '9.4.0'
}

apply plugin: 'com.bmuschko.docker-spring-boot-application'

group = 'tech.enricorampazzo'
version = '0.0.1-SNAPSHOT'


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

docker {
	springBootApplication {
		baseImage = 'amazoncorretto:22'
		ports = [9090, 8080]
		images = [rootProject.name + ':' + version, rootProject.name + ':latest']
		jvmArgs = ['-Xmx2048m']
	}
}

configurations {
	compileOnly {
		extendsFrom configurations.annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql:1.20.1'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(Test) {
	useJUnitPlatform()
}